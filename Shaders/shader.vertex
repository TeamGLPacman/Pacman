#version 410
layout (location = 0) in vec3 VertexPosition;
layout (location = 1) in vec3 VertexNormal;
layout (location = 2) in vec2 VertexTexCoord;

out vec4 EyePosition;
out vec3 TNormal;
out vec2 TexCoord;
out float lightStrength;
out vec4 LightWPos;

//Matrices-----------------------------------------
uniform mat4 ViewMatrix;
uniform mat4 ModelViewMatrix;
uniform mat3 NormalMatrix;
uniform mat4 ProjectionMatrix;
uniform mat4 MVP;		   // Projection * ModelView

uniform vec3 LightWorldPos;
uniform float range;

void main()
{
	// Convert normal and position to eye coords

	TexCoord = VertexTexCoord;
	TNormal = normalize(NormalMatrix * VertexNormal);
	EyePosition = ModelViewMatrix * vec4(VertexPosition,1.0);
	LightWPos = ViewMatrix * vec4(LightWorldPos, 1.0);

	vec4 tempVec = (ModelViewMatrix * vec4(VertexPosition,1.0)) - LightWPos;
	float lightDist = abs(length(tempVec));
	if( lightDist > range )
		lightStrength = 0;
	else
	{
		lightStrength = 1.0-(lightDist / range);
	}

	gl_Position = MVP * vec4(VertexPosition,1.0);
}